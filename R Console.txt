
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[R.app GUI 1.66 (7060) x86_64-apple-darwin13.4.0]

[History restored from /Users/xindongli/.Rapp.history]

> getwd()
[1] "/Users/xindongli/Documents/RepData_PeerAssessment1"
> unzip(zipfile = "/Users/xindongli/Documents/RepData_PeerAssessment1/activity.zip")
> data <- read.csv("activity.csv")
> library(ggplot2)
> total<- tapply(data$steps, data$date, FUN = sum, na.rm = TRUE)
> qplot(total, binwidth = 1000, xlab = "total steps per day")
> 
> mean(total, na.rm = TRUE)
[1] 9354.23
> median(total, na.rm = TRUE)
[1] 10395
> 
> library(ggplot2)
> avg <- aggregate(x = list(steps = data$steps), by = list(interval = data$interval), 
+     FUN = mean, na.rm = TRUE)
> ggplot(data = avg, aes(x = interval, y = steps)) + geom_line() + xlab("5-minute interval") + 
+     ylab("average steps")
> 
> avg[which.max(avg$steps), ]
    interval    steps
104      835 206.1698
> 
> mvalue<- is.na(data$steps)
> table(mvalue)
mvalue
FALSE  TRUE 
15264  2304 
2016-02-07 14:31:04.925 R[6283:721284] -deltaZ is deprecated for NSEventTypeMagnify.  Please use -magnification.
> fvalue<- function(steps, interval) {
+     filled <- NA
+     if (!is.na(steps)) 
+         filled <- c(steps) else filled <- (avg[avg$interval == interval, "steps"])
+     return(filled)
+ }
> filled.data <- data
> filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$interval)
Error in match.fun(FUN) : object 'fill.value' not found
> filled.data <- data
> filled.data$steps <- mapply(fvalue, filled.data$steps, filled.data$interval)
> total<- tapply(filled.data$steps, filled.data$date, FUN = sum)
> qplot(total.steps, binwidth = 1000, xlab = "total steps per day")
Error in eval(expr, envir, enclos) : object 'total.steps' not found
> qplot(total, binwidth = 1000, xlab = "total steps per day")
> 
> mean(total)
[1] 10766.19
> median(total)
[1] 10766.19
> 
> weekday.or.weekend <- function(date) {
+     day <- weekdays(date)
+     if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")) 
+         return("weekday") else if (day %in% c("Saturday", "Sunday")) 
+         return("weekend") else stop("invalid date")
+ }
> filled.data$date <- as.Date(filled.data$date)
> filled.data$day <- sapply(filled.data$date, FUN = weekday.or.weekend)
> avg <- avg(steps ~ interval + day, data = filled.data, mean)
Error: could not find function "avg"
> ggplot(avg, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) + 
+     xlab("5-minute interval") + ylab("Number of steps")
Error in layout_base(data, rows, drop = drop) : 
  At least one layer must contain all variables used for facetting
> averages <- aggregate(steps ~ interval + day, data = filled.data, mean)
> ggplot(averages, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) + 
+     xlab("5-minute interval") + ylab("Number of steps")
> 